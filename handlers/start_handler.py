# handlers/start_handler.py (Re-Re-Refactored)

import datetime
from telegram import Update
from telegram.ext import ContextTypes, CommandHandler

from db import get_collection
from logging_config import logger

# --- Helper to get user role ---
async def get_user_role(user_id: int, username: str | None) -> str:
    """
    Retrieves the user's role from the database.
    Defaults to 'student' if the user is not found.
    Optionally adds the user as a 'student' if they don't exist.
    """
    users_collection = await get_collection('users')
    user_data = await users_collection.find_one({'user_id': user_id})

    if user_data:
        return user_data.get('role', 'student') # Default role if field missing
    else:
        # User not found, treat as student and add them to DB
        logger.info(f'User {user_id} (@{username}) not found. Adding as student.')
        try:
            await users_collection.insert_one({
                'user_id': user_id,
                'username': username,
                'role': 'student',
                'date_added': datetime.datetime.now(datetime.timezone.utc)
                # TODO: Add first_name/last_name if available from Update
            })
            logger.info(f'Successfully added user {user_id} as student.')
        except Exception as e:
            # Log error but proceed treating them as student for this request
            logger.error(f'Failed to add user {user_id} to DB: {e}')
        return 'student'


# --- Command Handler ---
async def start_command(
    update: Update, context: ContextTypes.DEFAULT_TYPE
) -> None:
    """Handles the /start command, displaying role-specific help."""
    if not update.effective_user:
        logger.warning('/start triggered with no effective_user.')
        return

    user_id = update.effective_user.id
    username = update.effective_user.username
    logger.info(f'User {user_id} (@{username}) triggered /start command.')

    # Get user role from database
    user_role = await get_user_role(user_id, username)
    logger.info(f'User {user_id} role determined as: {user_role}')

    # --- Define Help Texts (with more emojis and corrected /results) ---
    admin_help = """
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø - —Ä–æ–±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤!

üõ†Ô∏è **–ö–æ–º–∞–Ω–¥—ã –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:**
‚¨ÜÔ∏è /upload - –ó–∞–≥—Ä—É–∑–∏—Ç—å CSV —Ç–µ—Å—Ç (`test<ID>.csv`).
üìé /upload <ID> - –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∞ <ID>.
‚¨áÔ∏è /download <ID> - –°–∫–∞—á–∞—Ç—å —Ç–µ—Å—Ç <ID> –≤ CSV.
‚ñ∂Ô∏è /act_test <ID> ... - –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç <ID> (—Å–º. `/help act_test`).
‚ûï /add_teacher <username> - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.
üìú /list_teachers - –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π.
üìä /results <ID> - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ <ID>.
üìÑ /txt <ID> - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ <ID> –≤ `.txt`.
üßê /show <ID> - –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–∞ <ID> (–±–µ–∑ –æ—Ç–≤–µ—Ç–æ–≤).
üìö /materials <ID> - –£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∞ <ID>.
üÜò /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    # TODO: Add /remove_teacher <username> ?
    # TODO: Add /help command handler? (maybe alias to /start)
    # TODO: Add /help act_test command handler

    teacher_help = """
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø - —Ä–æ–±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤!

üë©‚Äçüè´ **–ö–æ–º–∞–Ω–¥—ã –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:**
‚¨ÜÔ∏è /upload - –ó–∞–≥—Ä—É–∑–∏—Ç—å CSV —Ç–µ—Å—Ç (`test<ID>.csv`).
üìé /upload <ID> - –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∞ <ID>.
‚¨áÔ∏è /download <ID> - –°–∫–∞—á–∞—Ç—å —Ç–µ—Å—Ç <ID> –≤ CSV.
‚ñ∂Ô∏è /act_test <ID> ... - –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç <ID> (—Å–º. `/help act_test`).
üìä /results <ID> - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –í–∞—à–∏—Ö –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ <ID>.
üìÑ /txt <ID> - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –í–∞—à–µ–≥–æ —Ç–µ—Å—Ç–∞ <ID> –≤ `.txt`.
üßê /show <ID> - –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–∞ <ID> (–±–µ–∑ –æ—Ç–≤–µ—Ç–æ–≤).
üìö /materials <ID> - –£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∞ <ID>.
‚úçÔ∏è /test <ID> - –ü—Ä–æ–π—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç <ID>.
üìà /results - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
üÜò /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    # TODO: Add /help act_test command handler

    student_help = """
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø - —Ä–æ–±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!

üéì **–ö–æ–º–∞–Ω–¥—ã –°—Ç—É–¥–µ–Ω—Ç–∞:**
‚úçÔ∏è /test <ID> - –ù–∞—á–∞—Ç—å –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç <ID>.
üìö /materials <ID> - –£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∞ <ID>.
üìà /results - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
üßê /show <ID> - –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–∞ <ID> (–±–µ–∑ –æ—Ç–≤–µ—Ç–æ–≤).
üÜò /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """

    # Select help text based on role
    if user_role == 'admin':
        help_text = admin_help
    elif user_role == 'teacher':
        help_text = teacher_help
    else: # Default to student
        help_text = student_help

    await update.message.reply_text(help_text)


# --- Create the handler ---
start_command_handler = CommandHandler('start', start_command)
# Optional: Add alias for /help pointing to the same function
help_command_handler = CommandHandler('help', start_command)